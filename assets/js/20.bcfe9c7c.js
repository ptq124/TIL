(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{291:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"자바스크립트-런타임-환경"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-런타임-환경"}},[t._v("#")]),t._v(" 자바스크립트 런타임 환경")]),t._v(" "),a("p",[t._v("자바스크립트 런타임 환경은 자바스크립트 엔진, WEB APIs, Callback Queue, Event Loop으로 구성되어 있다.")]),t._v(" "),a("h2",{attrs:{id:"콜스택"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#콜스택"}},[t._v("#")]),t._v(" 콜스택")]),t._v(" "),a("p",[t._v("자바스크립트는 싱글 스레드 프로그래밍 언어다. (싱글 스레드가 무엇인지는 구글링을 해보자!)")]),t._v(" "),a("p",[t._v("여기선 싱글 스레드와 콜스택을 같은 개념으로 이해하면 편하다. (싱글 스레드 == 콜스택)")]),t._v(" "),a("p",[t._v("먼저 설명하기 전에 콜스택에 대해 간단히 설명하면 콜스택은 함수가 실행되면 콜스택에 들어오고 함수에서 리턴이 일어나면 콜스택의 가장 위쪽에서 해당 함수를 꺼낸다.")]),t._v(" "),a("p",[t._v("코드로 확인해 보자.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printSquare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Step1: printSquare(5) 함수가 콜스택에 들어온다.")]),t._v(" "),a("p",[t._v("Step2: printSquare(5) 함수가 들어와서 실행 중 multiply(x,y)함수를 발견하여 multiply(x,y)함수가 콜스택으로 들어온다.")]),t._v(" "),a("p",[t._v("Step3: multiply(x,y) 함수가 실행돼서 x*y값을 리턴 받아 콜스택을 빠져나왔다. 그후 console.log(s)가 콜스택에 들어온다.")]),t._v(" "),a("p",[t._v("Step4: console.log(s)가 실행되어 콜스택을 빠져나 간후 printSquare(5) 함수가 종료 되어 콜스택에 빠져나간다.")]),t._v(" "),a("p",[t._v("Step5: 모든 코드를 실행했으므로 콜스택에 남아있는 건 없다.")]),t._v(" "),a("h2",{attrs:{id:"non-blocking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-blocking"}},[t._v("#")]),t._v(" Non-Blocking")]),t._v(" "),a("p",[t._v("Non-Blocking을 설명하기 전에 Block이 된다는 걸 무엇인지 알아야한다.")]),t._v(" "),a("p",[t._v("Block은 간단히 설명하면 느려지는거다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"//foo.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"//bar.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" baz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"//baz.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("동기적으로 AJAX요청을 보내는 jQuery 함수 getSync가 있다고 한다면")]),t._v(" "),a("p",[t._v("getSync를 호출하면 응답을 기다릴 때까지 프로그램이 멈추게 된다.")]),t._v(" "),a("p",[t._v("즉 Block상태는 브러우저에 치명적인 오류를 발생시킨다. 브라우저는 다이나믹한 UI를 렌더링하는데 위와 같은 상황이 발생해 코드가 잠깐 중단된다면 다이나믹한 UI를 렌더링 할 수 없게 된다.")]),t._v(" "),a("p",[t._v("그래서 결국 브라우저는 Non-Blocking 방식을 채택하게 되었고 자바스크립트의 싱글스레드 방식을 효과적으로 지원하는 Web APIs와 Task Queue, Event Loop 같은 것들을 지원하게 되었다.")]),t._v(" "),a("h2",{attrs:{id:"자바스크립트-런타임"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-런타임"}},[t._v("#")]),t._v(" 자바스크립트 런타임")]),t._v(" "),a("p",[t._v("자바스크립트 엔진 안에 Memory heap과 Call Stack이 있고 엔진 밖에 Web APIs, Callback Queue, Event Loop들이 있다.")]),t._v(" "),a("h3",{attrs:{id:"call-stack-자바스크립트-엔진"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-stack-자바스크립트-엔진"}},[t._v("#")]),t._v(" Call Stack (자바스크립트 엔진)")]),t._v(" "),a("p",[t._v("코드 실행에 따라 콜백함수들이 쌓이는 곳(LIFO 후입 선출)")]),t._v(" "),a("h3",{attrs:{id:"web-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-apis"}},[t._v("#")]),t._v(" Web APIs")]),t._v(" "),a("p",[t._v("호스트 환경에서 제공해주는 API다 비동기적으로 실행이 가능하다.")]),t._v(" "),a("p",[t._v("예) dom, setTimeout, setInterval, Fetch, Event Listener")]),t._v(" "),a("h3",{attrs:{id:"callback-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callback-queue"}},[t._v("#")]),t._v(" Callback Queue")]),t._v(" "),a("p",[t._v("WebAPIs의 실행이 끝나고 나면 Callback Queue에 콜백 함수들이 전달된다.")]),t._v(" "),a("h3",{attrs:{id:"event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-loop"}},[t._v("#")]),t._v(" Event Loop")]),t._v(" "),a("p",[t._v("Callback Queue, Call Stack을 감시하여 만약 Call Stack이 비어있다면 Callback Queue에 있는 콜백함수를 Call Stack으로 전달한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("과정은 아래와 같다.")]),t._v(" "),a("p",[t._v("Step1:")]),t._v(" "),a("p",[t._v("console.log('Hi')가 Call Stack에 들어온다.")]),t._v(" "),a("p",[t._v("Step2:")]),t._v(" "),a("p",[t._v("Web Apis의 setTimeout가 실행된다.")]),t._v(" "),a("p",[t._v("Step3:")]),t._v(" "),a("p",[t._v("console.log('Hi')가 콘솔창에 출력되고 Call Stack을 빠져나온다.")]),t._v(" "),a("p",[t._v("Step4:")]),t._v(" "),a("p",[t._v("console.log('Hello')가 Call Stack에 들어온다.")]),t._v(" "),a("p",[t._v("Step5:")]),t._v(" "),a("p",[t._v("console.log('Hi')가 콘솔창에 출력되고 Call Stack을 빠져나온다.")]),t._v(" "),a("p",[t._v("Step6:")]),t._v(" "),a("p",[t._v("setTimeout에 timer가 3초가 실행되면 console.log('there')가 Callback Queue에 들어온다.")]),t._v(" "),a("p",[t._v("Step7:")]),t._v(" "),a("p",[t._v("Event Loop가 Call Stack이 비었는지 확인 후 비어있다면 Callback Queue있던 console.log('there')를 Call Stack으로 밀어넣는다.")]),t._v(" "),a("p",[t._v("Step8:")]),t._v(" "),a("p",[t._v("Call Stack에 있던 console.log('there')가 콘솔창에 출력되고 Call Stack을 빠져나온다.")]),t._v(" "),a("h2",{attrs:{id:"결론"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#결론"}},[t._v("#")]),t._v(" 결론")]),t._v(" "),a("p",[t._v("자바스크립트 런타임 환경은 비동기적인 기능을 제공해 주어 단일 스레드기반의 자바스크립트를 브라우저에 사용될 수 있게 했다. (그래서 자바스크립트가 웹 생태계에서 잘 살아고 있지 않을까? 생각한다)")])])}),[],!1,null,null,null);a.default=e.exports}}]);